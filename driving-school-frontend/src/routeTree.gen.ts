/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PupilsIndexRouteImport } from './routes/pupils/index'
import { Route as PupilsAddRouteImport } from './routes/pupils/add'
import { Route as PupilsPupilIdIndexRouteImport } from './routes/pupils/$pupilId/index'
import { Route as PupilsPupilIdEditRouteImport } from './routes/pupils/$pupilId/edit'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PupilsIndexRoute = PupilsIndexRouteImport.update({
  id: '/pupils/',
  path: '/pupils/',
  getParentRoute: () => rootRouteImport,
} as any)
const PupilsAddRoute = PupilsAddRouteImport.update({
  id: '/pupils/add',
  path: '/pupils/add',
  getParentRoute: () => rootRouteImport,
} as any)
const PupilsPupilIdIndexRoute = PupilsPupilIdIndexRouteImport.update({
  id: '/pupils/$pupilId/',
  path: '/pupils/$pupilId/',
  getParentRoute: () => rootRouteImport,
} as any)
const PupilsPupilIdEditRoute = PupilsPupilIdEditRouteImport.update({
  id: '/pupils/$pupilId/edit',
  path: '/pupils/$pupilId/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/pupils/add': typeof PupilsAddRoute
  '/pupils': typeof PupilsIndexRoute
  '/pupils/$pupilId/edit': typeof PupilsPupilIdEditRoute
  '/pupils/$pupilId': typeof PupilsPupilIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/pupils/add': typeof PupilsAddRoute
  '/pupils': typeof PupilsIndexRoute
  '/pupils/$pupilId/edit': typeof PupilsPupilIdEditRoute
  '/pupils/$pupilId': typeof PupilsPupilIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/pupils/add': typeof PupilsAddRoute
  '/pupils/': typeof PupilsIndexRoute
  '/pupils/$pupilId/edit': typeof PupilsPupilIdEditRoute
  '/pupils/$pupilId/': typeof PupilsPupilIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/pupils/add'
    | '/pupils'
    | '/pupils/$pupilId/edit'
    | '/pupils/$pupilId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/pupils/add'
    | '/pupils'
    | '/pupils/$pupilId/edit'
    | '/pupils/$pupilId'
  id:
    | '__root__'
    | '/'
    | '/pupils/add'
    | '/pupils/'
    | '/pupils/$pupilId/edit'
    | '/pupils/$pupilId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PupilsAddRoute: typeof PupilsAddRoute
  PupilsIndexRoute: typeof PupilsIndexRoute
  PupilsPupilIdEditRoute: typeof PupilsPupilIdEditRoute
  PupilsPupilIdIndexRoute: typeof PupilsPupilIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pupils/': {
      id: '/pupils/'
      path: '/pupils'
      fullPath: '/pupils'
      preLoaderRoute: typeof PupilsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pupils/add': {
      id: '/pupils/add'
      path: '/pupils/add'
      fullPath: '/pupils/add'
      preLoaderRoute: typeof PupilsAddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pupils/$pupilId/': {
      id: '/pupils/$pupilId/'
      path: '/pupils/$pupilId'
      fullPath: '/pupils/$pupilId'
      preLoaderRoute: typeof PupilsPupilIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pupils/$pupilId/edit': {
      id: '/pupils/$pupilId/edit'
      path: '/pupils/$pupilId/edit'
      fullPath: '/pupils/$pupilId/edit'
      preLoaderRoute: typeof PupilsPupilIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PupilsAddRoute: PupilsAddRoute,
  PupilsIndexRoute: PupilsIndexRoute,
  PupilsPupilIdEditRoute: PupilsPupilIdEditRoute,
  PupilsPupilIdIndexRoute: PupilsPupilIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
